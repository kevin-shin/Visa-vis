{"version":3,"sources":["common/mock.js","common/api.js","app/timeline/Timeline.js","app/tasksList/TaskListItem.js","app/tasksList/TasksList.js","app/taskCard/SubTaskList.js","app/taskCard/TaskNotes.js","app/taskCard/TaskCard.js","app/App.js","serviceWorker.js","index.js"],"names":["MOCK_TASKS","id","date","checked","title","description","notes","subTasks","actionItems","link","updateTask","task","forEach","item","i","status","Timeline","props","className","tasks","map","key","TaskListItem","onClick","onSelect","type","value","onChange","e","persist","newTask","target","htmlFor","TasksList","sort","date1","date2","first_date","Date","second_date","onSelectTask","SubTasksList","subTask","newSubTask","TaskNotes","TaskCard","actionItem","href","rel","App","useState","selectedTask","setSelectedTask","setTasks","useEffect","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sSAAaA,G,MAAa,CACxB,CACEC,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,8BACPC,YAAa,kMACbC,MAAO,GACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,kDACPD,SAAS,IAGbK,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,6EAER,CACER,GAAI,EACJG,MAAO,iBACPK,KAAM,+EAIZ,CACER,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,6BACPC,YAAa,sNACbC,MAAO,iLACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,sCACPD,SAAS,IAGbK,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,+EAER,CACER,GAAI,EACJG,MAAO,kBACPK,KAAM,yGAIZ,CACER,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,oBACPC,YAAa,iFACbC,MAAO,2GACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,4CACPD,SAAS,IAGbK,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,+EAER,CACER,GAAI,EACJG,MAAO,uBACPK,KAAM,2FAER,CACER,GAAI,EACJG,MAAO,8BACPK,KAAM,gEAIZ,CACER,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,cACPC,YAAa,wIACbC,MAAO,wFACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,2CACPD,SAAS,IAGbK,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,+EAER,CACER,GAAI,EACJG,MAAO,gBACPK,KAAM,+EAIZ,CACER,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,aACPC,YAAa,0aACbC,MAAO,GACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,iEACPD,SAAS,GAEX,CACEF,GAAI,EACJG,MAAO,yOACPD,SAAS,GAEX,CACEF,GAAI,EACJG,MAAO,gLACPD,SAAS,IAGbK,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,+EAER,CACER,GAAI,EACJG,MAAO,gBACPK,KAAM,8EAIZ,CACER,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,wBACPC,YAAa,0DACbC,MAAO,mCACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,0BACPD,SAAS,IAGbK,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,iFAIZ,CACER,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,2BACPC,YAAa,kDACbC,MAAO,GACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,0EACPD,SAAS,IAGbK,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,qFAER,CACER,GAAI,EACJG,MAAO,gBACPK,KAAM,wCAIZ,CACER,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,oBACPC,YAAa,gDACbC,MAAO,GACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,sFACPD,SAAS,IAGbK,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,iFAIZ,CACER,GAAI,EACJC,KAAM,aACNC,SAAS,EACTC,MAAO,OACPC,YAAa,iEACbC,MAAO,uJACPC,SAAU,CACR,CACEN,GAAI,EACJG,MAAO,iBACPD,SAAS,GAEX,CACEF,GAAI,EACJG,MAAM,oEAGVI,YAAa,CACX,CACEP,GAAI,EACJG,MAAO,sBACPK,KAAM,+EAER,CACER,GAAI,EACJG,MAAO,kCACPK,KAAM,oDCnPDC,EAAa,SAACT,EAAIU,GAO7B,OANAX,EAAWY,SAAQ,SAACC,EAAMC,GACpBD,EAAKZ,KAAOU,EAAKV,KACnBD,EAAWc,GAAKH,MAIb,CAACI,OAAQ,MCOHC,G,MAjBE,SAACC,GAChB,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,aAEXD,EAAME,MAAMC,KAAI,SAAAT,GACZ,OACE,0BAAMU,IAAKV,EAAKV,GAAIiB,UAAS,sBAAiBP,IAASM,EAAMN,KAAO,WAAa,a,glBCPjG,IAuDeW,EAvDM,SAACL,GACpB,IAAMN,EAAOM,EAAMN,KAEnB,OACE,wBACEO,UAAU,eACVK,QAAS,kBAAMN,EAAMO,SAASb,KAE9B,yBAAKO,UAAU,aACb,6BACE,2BACEO,KAAK,OACLC,MAAOf,EAAKT,KACZyB,SAAU,SAACC,GACTA,EAAEC,UAEF,IAAIC,EAAO,KACNnB,EADM,CAETT,KAAM0B,EAAEG,OAAOL,QAGjBhB,EAAWC,EAAKV,GAAI6B,GACpBb,EAAMU,SAASG,MAGnB,0BAAMZ,UAAU,iBACbD,EAAMN,KAAKP,QAGhB,6BACE,2BACEqB,KAAK,WACLP,UAAU,uBACVf,QAASQ,EAAKR,QACdF,GAAIgB,EAAMN,KAAKV,GACf0B,SAAU,SAACC,GACTA,EAAEC,UAEF,IAAIC,EAAO,KACNnB,EADM,CAETR,QAASyB,EAAEG,OAAO5B,UAGpBO,EAAWC,EAAKV,GAAI6B,GACpBb,EAAMU,SAASG,OAGD,IAAjBnB,EAAKR,SAAqB,2BAAOe,UAAU,cAAcc,QAASf,EAAMN,KAAKV,IAAnD,UACT,IAAjBU,EAAKR,SAAoB,2BAAOe,UAAU,YAAYc,QAASf,EAAMN,KAAKV,IAAjD,iBCdrBgC,G,MAjCG,SAAChB,GACjB,OACE,yBAAKC,UAAU,aACX,yBAAKA,UAAU,qBACjB,wBAAIA,UAAU,cAEVD,EAAME,MACLe,MAAM,SAACC,EAAMC,GACZ,IAAIC,EAAa,IAAIC,KAAKH,EAAMjC,MAC5BqC,EAAc,IAAID,KAAKF,EAAMlC,MAEjC,OAAImC,EAAaE,GAAqB,EAClCF,EAAaE,EAAoB,EAC9B,KAGRnB,KAAK,SAACT,GACL,OACE,kBAAC,EAAD,CACEU,IAAKV,EAAKV,GACVU,KAAMA,EACNa,SAAUP,EAAMuB,aAChBb,SAAUV,EAAMuB,mBAMxB,yBAAKtB,UAAU,wB,+kBC7BvB,IAuCeuB,EAvCM,SAACxB,GACpB,IAAMN,EAAOM,EAAMN,KAEnB,OACE,yBAAKO,UAAU,gBACb,0BAAMA,UAAU,sBAAhB,qBACA,4BAEIP,EAAKJ,SAASa,KAAI,SAACsB,EAAS5B,GAC1B,OACE,wBAAIO,IAAKqB,EAAQzC,IACf,2BACEwB,KAAK,WACLtB,QAASuC,EAAQvC,QACjBwB,SAAU,SAACC,GACTA,EAAEC,UAEF,IAAIc,EAAU,KACTD,EADS,CAEZvC,QAASyB,EAAEG,OAAO5B,UAGhB2B,EAAO,KAAOnB,GAElBmB,EAAQvB,SAASO,GAAK6B,EAEtBjC,EAAWC,EAAKV,GAAI6B,GACpBb,EAAMU,SAASG,MAElBY,EAAQtC,a,8NC7BzB,IAuBewC,EAvBG,SAAC3B,GACjB,IAAMN,EAAOM,EAAMN,KAEnB,OACE,yBAAKO,UAAU,aACb,uBAAGA,UAAU,oBAAb,UACA,8BACEQ,MAAOf,EAAKL,MACZqB,SAAU,SAACC,GACTA,EAAEC,UAEF,IAAIC,E,yWAAO,IACNnB,EADM,CAETL,MAAOsB,EAAEG,OAAOL,QAGlBhB,EAAWC,EAAKV,GAAI6B,GACpBb,EAAMU,SAASG,QCuBVe,EAtCE,SAAC5B,GAChB,IAAMN,EAAOM,EAAMN,KAEnB,OACE,yBAAKO,UAAU,YAEXP,EACE,oCACE,yBAAKO,UAAU,cAAcP,EAAKP,OAClC,yBAAKc,UAAU,oBAAoBP,EAAKN,aACxC,kBAAC,EAAD,CAAcM,KAAMA,EAAMgB,SAAUV,EAAMU,WAC1C,yBAAKT,UAAU,gBACXP,EAAKH,YAAYY,KAAI,SAAA0B,GACnB,OACE,uBACEzB,IAAKyB,EAAW7C,GAChBiB,UAAU,2BACV6B,KAAMD,EAAWrC,KACjBsB,OAAO,SACPiB,IAAI,uBAEHF,EAAW1C,WAMtB,kBAAC,EAAD,CAAWO,KAAMA,EAAMgB,SAAUV,EAAMU,YAGzC,yBAAKT,UAAU,uBAAf,mDCNK+B,EAtBH,WAAO,IAAD,EACwBC,mBAAS,MADjC,mBACTC,EADS,KACKC,EADL,OAEUF,mBAAS,IAFnB,mBAET/B,EAFS,KAEFkC,EAFE,KAQhB,OAJAC,qBAAU,WACRD,EPTK,CAACE,KAAMvD,EAAYe,OAAQ,KOSZwC,QACnB,IAGD,yBAAKrC,UAAU,QACb,yBAAKA,UAAU,UAAf,YAGA,yBAAKA,UAAU,QACb,kBAAC,EAAD,CAAUP,KAAMwC,EAAcxB,SAAUyB,IACxC,kBAAC,EAAD,CAAWjC,MAAOA,EAAOqB,aAAcY,IACvC,kBAAC,EAAD,CAAUjC,MAAOA,EAAOR,KAAMwC,OCXlBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.36261f62.chunk.js","sourcesContent":["export const MOCK_TASKS = [\n  {\n    id: 0,\n    date: \"2020-03-15\",\n    checked: false,\n    title: \"Copy of passport photo page\",\n    description: \"Two passport-style photos taken within 30 days at FedEx, Walgreens, CVS, etc. Write lightly in pencil or felt pen your name and I-94 number) on back of photos (or card envelope if available).\",\n    notes: \"\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"Bring pen/pencil to write information on photos\",\n        checked: false\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://travel.state.gov/content/travel/en/passports/how-apply/photos.htm\"\n      },\n      {\n        id: 1,\n        title: \"Example photos\",\n        link: \"https://travel.state.gov/content/travel/en/passports/how-apply/photos.htm\"\n      }\n    ]\n  },\n  {\n    id: 1,\n    date: \"2020-04-01\",\n    checked: false,\n    title: \"OPT application supplement\",\n    description: \"You must complete this form BEFORE your appointment with an ISP staff member to review your OPT or OPT STEM (after you complete 12-month OPT) application and to issue a new I-20 to include with your application.\",\n    notes: \"Your OPT or OPT STEM application must be received by USCIS within 30 days of I-20 issuance; the consequence for not doing so is rejection of your OPT or OPT STEM application.\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"Fill out the application supplement\",\n        checked: false\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://www.macalester.edu/isp/governmentregulations/employmentpostmac/#opt\"\n      },\n      {\n        id: 1,\n        title: \"Access the form\",\n        link: \"https://docs.google.com/forms/d/e/1FAIpQLScxOI4jI86El6_QKMqZqqdB7NeA0O8yWEd4C_vo0kDTiw-3RQ/viewform\"\n      }\n    ]\n  },\n  {\n    id: 2,\n    date: \"2020-04-07\",\n    checked: false,\n    title: \"Check/Money order\",\n    description: \"Check or money order for $410 made out to the Department of Homeland Security.\",\n    notes: \"Payment with a valid credit card is possible with Form G-1450 Authorization for Credit Card Transactions\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"Learn how to fill out a check/money order\",\n        checked: false\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://www.macalester.edu/isp/governmentregulations/employmentpostmac/#opt\"\n      },\n      {\n        id: 1,\n        title: \"How to write a check\",\n        link: \"https://www.macalester.edu/isp/wp-content/uploads/sites/95/2017/02/HowToWriteACheck.pdf\"\n      },\n      {\n        id: 2,\n        title: \"How to pay with credit card\",\n        link: \"https://www.uscis.gov/forms/fingerprints/pay-a-credit-card\"\n      }\n    ]\n  },\n  {\n    id: 3,\n    date: \"2020-04-10\",\n    checked: false,\n    title: \"Form G-1145\",\n    description: \"Filling out this form is optional but recommended, and you will receive a text message or email when USCIS receives your application.\",\n    notes: \"Use this form to request a text message or email when USCIS receives your application\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"Download the form from the USCIS website\",\n        checked: false\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://www.macalester.edu/isp/governmentregulations/employmentpostmac/#opt\"\n      },\n      {\n        id: 1,\n        title: \"Download form\",\n        link: \"https://www.uscis.gov/system/files_force/files/form/g-1145.pdf?download=1\"\n      }\n    ]\n  },\n  {\n    id: 4,\n    date: \"2020-04-15\",\n    checked: false,\n    title: \"Form I-765\",\n    description: \"Certain aliens who are in the United States may file Form I-765, Application for Employment Authorization, to request employment authorization and an Employment Authorization Document (EAD).  Other aliens whose immigration status authorizes them to work in the United States without restrictions may also use Form I-765 to apply to U.S. Citizenship and Immigration Services (USCIS) for an EAD that shows such authorization.\",\n    notes: \"\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"For Line 1.a., check 'Initial permission to accept employment.\",\n        checked: false\n      },\n      {\n        id: 1,\n        title: \"For Lines 5.a. - 7.d., If you authorize ISP to open your mail, make sure to put “c/o ISP, 1600 Grand Ave, St Paul, MN 55105” as your mailing address on the Form I-765 and put your actual address as your physical address.\",\n        checked: false\n      },\n      {\n        id: 2,\n        title: \"For Line 27 Eligibility Category, enter code (c) (3) (B) for post-completion or graduation OPT; (c) (3) (C) is for STEM OPT extension, and (c) (3) (A) is for pre-completion.\",\n        checked: false\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://www.macalester.edu/isp/governmentregulations/employmentpostmac/#opt\"\n      },\n      {\n        id: 1,\n        title: \"Download form\",\n        link: \"https://www.uscis.gov/system/files_force/files/form/i-765.pdf?download=1\"\n      }\n    ]\n  },\n  {\n    id: 5,\n    date: \"2020-04-20\",\n    checked: false,\n    title: \"Copy of F-1 visa page\",\n    description: \"Copy of F-1 visa page typically found in your passport.\",\n    notes: \"Should be clear and easy to read\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"Make a copy of F-1 page\",\n        checked: false\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://www.macalester.edu/isp/governmentregulations/employmentpostmac/#opt\"\n      }\n    ]\n  },\n  {\n    id: 6,\n    date: \"2020-04-25\",\n    checked: false,\n    title: \"Copy of most recent I-94\",\n    description: \"You may access the form I-94 on the DHS website\",\n    notes: \"\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"Enter the necessary information and download your most recent form I-94\",\n        checked: false\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://www.thesitewizard.com/html-tutorial/open-links-in-new-window-or-tab.shtml\"\n      },\n      {\n        id: 1,\n        title: \"Download form\",\n        link: \"https://i94.cbp.dhs.gov/I94/#/home\"\n      }\n    ]\n  },\n  {\n    id: 7,\n    date: \"2020-04-30\",\n    checked: false,\n    title: \"[ISP] CPT history\",\n    description: \"ISP will print your CPT history if applicable\",\n    notes: \"\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"Email ISP at isp@macalester.edu to ask them to print your CPT history if applicable\",\n        checked: false\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://www.macalester.edu/isp/governmentregulations/employmentpostmac/#opt\"\n      }\n    ]\n  },\n  {\n    id: 8,\n    date: \"2020-05-05\",\n    checked: false,\n    title: \"I-20\",\n    description: \"ISP will print new I-20 for you to submit with your Form I-765\",\n    notes: \"Complete OPT application must be received by USCIS within 30 days of new I-20 issuance, failure to do so will result in application’s rejection\",\n    subTasks: [\n      {\n        id: 0,\n        title: \"Sign your I-20\",\n        checked: false\n      },\n      {\n        id: 1,\n        title:\"Submit complete OPT application within 30 days of I-20 issuance\"\n      }\n    ],\n    actionItems: [\n      {\n        id: 0,\n        title: \"Click for more info\",\n        link: \"https://www.macalester.edu/isp/governmentregulations/employmentpostmac/#opt\"\n      },\n      {\n        id: 1,\n        title: \"Check status of OPT application\",\n        link: \"https://egov.uscis.gov/casestatus/landing.do\"\n      }\n    ]\n  }\n];","import {MOCK_TASKS} from \"./mock\";\n\nexport const getTasks = () => {\n  return {data: MOCK_TASKS, status: 200}\n};\n\nexport const updateTask = (id, task) => {\n  MOCK_TASKS.forEach((item, i) => {\n    if (item.id === task.id) {\n      MOCK_TASKS[i] = task;\n    }\n  });\n\n  return {status: 200};\n};","import React from \"react\";\nimport \"./styles.css\";\n\nconst Timeline = (props) => {\n  return (\n    <div className=\"Timeline\">\n      <div className=\"time-line\">\n        {\n          props.tasks.map(task => {\n              return (\n                <span key={task.id} className={`task-circle ${task === props.task ? \"selected\" : \"\"}`}/>\n              );\n            }\n          )\n        }\n      </div>\n    </div>\n  )\n};\n\nexport default Timeline;","import { updateTask } from \"../../common/api\";\nimport React from \"react\";\n\nconst TaskListItem = (props) => {\n  const task = props.task;\n  \n  return (\n    <li\n      className=\"TaskListItem\"\n      onClick={() => props.onSelect(task)}\n    >\n      <div className=\"task-item\">\n        <div>\n          <input\n            type=\"date\"\n            value={task.date}\n            onChange={(e) => {\n              e.persist();\n\n              let newTask = {\n                ...task,\n                date: e.target.value\n              };\n\n              updateTask(task.id, newTask);\n              props.onChange(newTask);\n            }}\n          />\n          <span className=\"task-li-title\">\n            {props.task.title}\n          </span>\n        </div>\n        <div>\n          <input\n            type=\"checkbox\"\n            className=\"checkboxTaskListItem\"\n            checked={task.checked}\n            id={props.task.id}\n            onChange={(e) => {\n              e.persist();\n\n              let newTask = {\n                ...task,\n                checked: e.target.checked\n              };\n\n              updateTask(task.id, newTask);\n              props.onChange(newTask);\n            }}\n          />\n          {task.checked === false && <label className=\"uncompleted\" htmlFor={props.task.id}>To Do</label>}\n          {task.checked === true && <label className=\"completed\" htmlFor={props.task.id}>Completed</label>}\n        </div>\n      </div>\n    </li>\n  )\n};\n\nexport default TaskListItem;","import React from \"react\";\nimport TaskListItem from \"./TaskListItem\";\nimport \"./styles.css\";\n\nconst TasksList = (props) => {\n  return (\n    <div className=\"TasksList\">\n        <div className=\"task-list-header\"></div>\n      <ul className=\"tasks-list\">\n        {\n          props.tasks\n          .sort( (date1,date2) => {\n            let first_date = new Date(date1.date);\n            let second_date = new Date(date2.date);\n  \n            if (first_date < second_date) return -1;\n            if (first_date > second_date) return 1;\n            return 0;\n            \n          })\n          .map( (task) => {\n            return (\n              <TaskListItem\n                key={task.id}\n                task={task}\n                onSelect={props.onSelectTask}\n                onChange={props.onSelectTask}\n              />\n            );\n          })\n        }\n      </ul>\n        <div className=\"task-list-footer\"></div>\n    </div>\n  );\n};\n\nexport default TasksList;","import {updateTask} from \"../../common/api\";\nimport React from \"react\";\n\nconst SubTasksList = (props) => {\n  const task = props.task;\n\n  return (\n    <div className=\"SubTasksList\">\n      <span className=\"subtask-list-title\">Additional Tasks:</span>\n      <ul>\n        {\n          task.subTasks.map((subTask, i) => {\n            return (\n              <li key={subTask.id}>\n                <input\n                  type=\"checkbox\"\n                  checked={subTask.checked}\n                  onChange={(e) => {\n                    e.persist();\n\n                    let newSubTask = {\n                      ...subTask,\n                      checked: e.target.checked\n                    };\n\n                    let newTask = {...task};\n\n                    newTask.subTasks[i] = newSubTask;\n\n                    updateTask(task.id, newTask);\n                    props.onChange(newTask);\n                  }}/>\n                {subTask.title}\n              </li>\n            );\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default SubTasksList;","import {updateTask} from \"../../common/api\";\nimport React from \"react\";\n\nconst TaskNotes = (props) => {\n  const task = props.task;\n\n  return (\n    <div className=\"TaskNotes\">\n      <p className=\"task-notes-title\">Notes:</p>\n      <textarea\n        value={task.notes}\n        onChange={(e) => {\n          e.persist();\n\n          let newTask = {\n            ...task,\n            notes: e.target.value\n          };\n\n          updateTask(task.id, newTask);\n          props.onChange(newTask);\n        }}/>\n    </div>\n  );\n};\n\nexport default TaskNotes;","import React from \"react\";\nimport \"./styles.css\";\nimport SubTasksList from \"./SubTaskList\";\nimport TaskNotes from \"./TaskNotes\";\n\nconst TaskCard = (props) =>{\n  const task = props.task;\n\n  return (\n    <div className=\"TaskCard\">\n      {\n        task ?\n          <>\n            <div className=\"task-title\">{task.title}</div>\n            <div className=\"task-description\">{task.description}</div>\n            <SubTasksList task={task} onChange={props.onChange}/>\n            <div className=\"buttonHolder\">{\n                task.actionItems.map(actionItem => {\n                  return (\n                    <a\n                      key={actionItem.id}\n                      className=\"button-ghost action-item\"\n                      href={actionItem.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {actionItem.title}\n                    </a>\n                  )\n                })\n              }\n            </div>\n            <TaskNotes task={task} onChange={props.onChange}/>\n          </>\n          :\n          <div className=\"no-card-instruction\">\n            Select a task on the left to see details here\n          </div>\n      }\n    </div>\n  );\n};\n\nexport default TaskCard;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {getTasks} from \"../common/api\";\nimport Timeline from \"./timeline/Timeline\";\nimport TasksList from \"./tasksList/TasksList\";\nimport TaskCard from \"./taskCard/TaskCard\";\n\nconst App = () => {\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    setTasks(getTasks().data);\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <div className=\"header\">\n        Visa-vis\n      </div>\n      <div className=\"main\">\n        <TaskCard task={selectedTask} onChange={setSelectedTask}/>\n        <TasksList tasks={tasks} onSelectTask={setSelectedTask}/>\n        <Timeline tasks={tasks} task={selectedTask}/>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}